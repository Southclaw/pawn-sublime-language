
{
	"scope": "source.pawn - variable.other.pawn",
	"completions":
	[

		// y_hooks.inc
		"Y_HOOKS_CONTINUE_RETURN_1",
		"Y_HOOKS_CONTINUE_RETURN_0",
		"Y_HOOKS_BREAK_RETURN_0",
		"Y_HOOKS_BREAK_RETURN_1",

		// y_timers.inc
		{"trigger": "defer", "contents": "defer ${1:name}(${2:args})"},
		{"trigger": "stop", "contents": "stop ${1:timer}"},
		{"trigger": "repeat", "contents": "repeat ${1:name}(${2:args})"},

		// y_bit.inc
		{"trigger": "BitArray", "contents": "BitArray:${1:name}<${2:size}>"},
		{"trigger": "Bit_Set", "contents": "Bit_Set(${1:BitArray:array<>}, ${2:slot}, ${3:bool:set})"},
		{"trigger": "Bit_FastSet", "contents": "Bit_FastSet(${1:BitArray:array<>}, ${2:slot}, ${3:bool:set})"},
		{"trigger": "Bit_SetAll", "contents": "Bit_SetAll(${1:BitArray:array<>}, ${2:bool:set})"},
		{"trigger": "Bit_Count", "contents": "Bit_Count(${1:BitArray:array<>}, ${2:size = sizeof(arrat)})"},
		{"trigger": "Bit_Get", "contents": "Bit_Get(${1:BitArray:array<>}, ${2:slot})"},
		{"trigger": "Bit_Let", "contents": "Bit_Let(${1:BitArray:array<>}, ${2:slot})"},
		{"trigger": "Bit_Vet", "contents": "Bit_Vet(${1:BitArray:array<>}, ${2:slot})"},
		{"trigger": "Bit_GetBit", "contents": "Bit_GetBit(${1:BitArray:array<>}, ${2:slot})"},
		{"trigger": "Bit_Mask", "contents": "Bit_Mask(${1:value})"},
		{"trigger": "Bit_Bits", "contents": "Bit_Bits(${1:size})"},
		{"trigger": "Bit_Slot", "contents": "Bit_Slot(${1:value})"},
		{"trigger": "Bit_Display", "contents": "Bit_Display(${1:BitArray:array<>}, ${2:size = sizeof(array)})"},

		// y_commands.inc
		{"trigger": "Command_GetID", "contents": "Command_GetID(${1:funcname[]})"},
		{"trigger": "Command_SetPlayer", "contents": "Command_SetPlayer(${1:command}, ${2:playerid}, ${3:set})"},
		{"trigger": "Command_SetPlayerNamed", "contents": "Command_SetPlayerNamed(${1:command[]}, ${2:playerid}, ${3:set})"},
		{"trigger": "Command_GetPlayer", "contents": "Command_GetPlayer(${1:command}, ${2:playerid})"},
		{"trigger": "Command_GetPlayerNamed", "contents": "Command_GetPlayerNamed(${1:command[]}, ${2:playerid})"},
		{"trigger": "Command_AddAlt", "contents": "Command_AddAlt(${1:oldid}, ${2:altname[]})"},
		{"trigger": "Command_AddAltNamed", "contents": "Command_AddAltNamed(${1:old[]}, ${2:altname[]})"},
		{"trigger": "Command_ReProcess", "contents": "Command_ReProcess(${1:playerid}, ${2:cmdtext[]}, ${3:help})"},
		{"trigger": "Command_GetName", "contents": "Command_GetName(${1:id})"},
		{"trigger": "Command_GetDisplay", "contents": "Command_GetDisplay(${1:command}, ${2:playerid})"},
		{"trigger": "Command_GetDisplayNamed", "contents": "Command_GetDisplayNamed(${1:command[]}, ${2:playerid})"},
		{"trigger": "Command_GetPlayerCommandCount", "contents": "Command_GetPlayerCommandCount(${1:playerid})"},
		{"trigger": "Command_GetNext", "contents": "Command_GetNext(${1:index}, ${2:playerid})"},
		{"trigger": "Command_SetDeniedReturn", "contents": "Command_SetDeniedReturn(${1:set})"},
		{"trigger": "Command_GetDeniedReturn", "contents": "Command_GetDeniedReturn()"},

		// y_va.inc
		{"trigger": "va_CallRemoteFunction", "contents": "va_CallRemoteFunction(${1:const function[]}, ${2:const fmat[]}, ${3:va_:STATIC_ARGS})"},
		{"trigger": "va_CallLocalFunction", "contents": "va_CallLocalFunction(${1:const function[]}, ${2:const fmat[]}, ${3:va_:STATIC_ARGS})"},
		{"trigger": "va_SetTimerEx", "contents": "va_SetTimerEx(${1:const function[]}, ${2:interval}, ${3:bool:repeating}, ${4:const fmat[]}, ${5:va_:STATIC_ARGS})"},
		{"trigger": "va_format", "contents": "va_format(${1:out[]}, ${2:size}, ${3:const fmat[]}, ${4:va_:STATIC_ARGS})"},
		{"trigger": "va_return", "contents": "va_return(${1:const fmat[]}, ${2:va_:STATIC_ARGS})"},
		{"trigger": "va_strlen", "contents": "va_strlen(${1:arg})"},
		{"trigger": "va_getstring", "contents": "va_getstring(${1:dest[]}, ${2:arg}, ${3:len = sizeof (dest})"},
		{"trigger": "va_CreatePlayerTextDraw", "contents": "va_CreatePlayerTextDraw(${1:playerid}, ${2:Float:x}, ${3:Float:y}, ${4:fmat[]}, ${5:va_args<>})"},
		{"trigger": "va_TextDrawCreate", "contents": "va_TextDrawCreate(${1:Float:x}, ${2:Float:y}, ${3:fmat[]}, ${4:va_args<>})"},
		{"trigger": "va_SendClientMessage", "contents": "va_SendClientMessage(${1:playerid}, ${2:colour}, ${3:const fmat[]}, ${4:va_args<>})"},
		{"trigger": "va_SendClientMessageToAll", "contents": "va_SendClientMessageToAll(${1:colour}, ${2:const fmat[]}, ${3:va_args<>})"},
		{"trigger": "va_SendPlayerMessageToPlayer", "contents": "va_SendPlayerMessageToPlayer(${1:playerid}, ${2:senderid}, ${3:const fmat[]}, ${4:va_args<>})"},
		{"trigger": "va_SendPlayerMessageToAll", "contents": "va_SendPlayerMessageToAll(${1:senderid}, ${2:const fmat[]}, ${3:va_args<>})"},
		{"trigger": "va_GameTextForPlayer", "contents": "va_GameTextForPlayer(${1:playerid}, ${2:const fmat[]}, ${3:time}, ${4:style}, ${5:va_args<>})"},
		{"trigger": "va_GameTextForAll", "contents": "va_GameTextForAll(${1:const fmat[]}, ${2:time}, ${3:style}, ${4:va_args<>})"},
		{"trigger": "va_print", "contents": "va_print(${1:const fmat[]}, ${2:va_args<>})"},
		{"trigger": "va_fprintf", "contents": "va_fprintf(${1:File:fhnd}, ${2:const fmat[]}, ${3:va_args<>})"},

		// y_iterate.inc
		{"trigger": "Iterator", "contents": "Iterator:${1:Iterator:Name<>}<${2:size}>;"},
		{"trigger": "Iter_Init", "contents": "Iter_Init(${1:IteratorArray:Name[]<>})"},
		{"trigger": "Iter_Add", "contents": "Iter_Add(${1:Iterator:Name<>}, ${2:value})"},
		{"trigger": "Iter_Remove", "contents": "Iter_Remove(${1:Iterator:Name<>}, ${2:value})"},
		{"trigger": "Iter_Free", "contents": "Iter_Free(${1:Iterator:Name<>})"},
		{"trigger": "Iter_FreeMulti", "contents": "Iter_FreeMulti(${1:Iterator:Name<>})"},
		{"trigger": "Iter_Contains", "contents": "Iter_Contains(${1:Iterator:Name<>}, ${2:value})"},
		{"trigger": "Iter_GetMulti", "contents": "Iter_GetMulti(${1:Iterator:Name<>}, ${2:value})"},
		{"trigger": "Iter_SafeRemove", "contents": "Iter_SafeRemove(${1:Iterator:Name<>}, ${2:value}, ${3:&next})"},
		{"trigger": "Iter_RandomAdd", "contents": "Iter_RandomAdd(${1:Iterator:Name<>})"},
		{"trigger": "Iter_RandomRemove", "contents": "Iter_RandomRemove(${1:Iterator:Name<>})"},
		{"trigger": "Iter_RandomFree", "contents": "Iter_RandomFree(${1:Iterator:Name<>})"},
		{"trigger": "Iter_Random", "contents": "Iter_Random(${1:Iterator:Name<>})"},
		{"trigger": "Iter_Count", "contents": "Iter_Count(${1:Iterator:Name<>})"},
		{"trigger": "Iter_Clear", "contents": "Iter_Clear(${1:IteratorArray:Name[]<>})"},
		{"trigger": "Iter_Alloc", "contents": "Iter_Alloc(${1:Iterator:Name<>})"},
		{"trigger": "Iter_FastClear", "contents": "Iter_FastClear(${1:IteratorArray:Name[]<>})"},
		{"trigger": "Iter_Next", "contents": "Iter_Next(${1:Iterator:Name<>})"},
		{"trigger": "Iter_Prev", "contents": "Iter_Prev(${1:Iterator:Name<>})"},
		{"trigger": "Iter_Last", "contents": "Iter_Last(${1:Iterator:Name<>})"},
		{"trigger": "Iter_First", "contents": "Iter_First(${1:Iterator:Name<>})"},
		{"trigger": "Iter_Begin", "contents": "Iter_Begin(${1:Iterator:Name<>})"},
		{"trigger": "Iter_End", "contents": "Iter_End(${1:Iterator:Name<>})"},
		{"trigger": "Iter_TrueArray", "contents": "Iter_TrueArray(${1:Iterator:Name<>})"},
		{"trigger": "Iter_TrueCount", "contents": "Iter_TrueCount(${1:Iterator:Name<>})"},
		{"trigger": "Iter_TrueMulti", "contents": "Iter_TrueMulti(${1:Iterator:Name<>})"},
		{"trigger": "Iter_TrueSize", "contents": "Iter_TrueSize(${1:Iterator:Name<>})"},
		{"trigger": "Iter_Starts", "contents": "Iter_Starts(${1:Iterator:Name<>})"},
		{"trigger": "Iter_Size", "contents": "Iter_Size(${1:Iterator:Name<>})"},
		{"trigger": "Iter_Index", "contents": "Iter_Index(${1:Iterator:Name<>})"}
	]
}
