{
	"scope": "source.pawn - variable.other.pawn",
	"completions":
	[
		{ "trigger": "AMX_GetBaseCount", "contents": "AMX_GetBaseCount(${1:table}, ${2:&base}, ${3:&count})" },
		{ "trigger": "AMX_GetGlobalAddress", "contents": "AMX_GetGlobalAddress(${1:args})" },
		{ "trigger": "AMX_Read", "contents": "AMX_Read(${1:addr})" },
		{ "trigger": "AMX_Write", "contents": "AMX_Write(${1:addr}, ${2:value})" },
		{ "trigger": "AMX_ReadString", "contents": "AMX_ReadString(${1:addr}, ${2:str}, ${3:len})" },
		{ "trigger": "AMX_WriteString", "contents": "AMX_WriteString(${1:addr}, ${2:str}, ${3:len})" },
		{ "trigger": "AMX_ReadArray", "contents": "AMX_ReadArray(${1:addr}, ${2:dest}, ${3:len})" },
		{ "trigger": "AMX_WriteArray", "contents": "AMX_WriteArray(${1:addr}, ${2:src}, ${3:len})" },
		{ "trigger": "AMX_GetPublicEntry", "contents": "AMX_GetPublicEntry(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetNativeEntry", "contents": "AMX_GetNativeEntry(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetLibraryEntry", "contents": "AMX_GetLibraryEntry(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetPubvarEntry", "contents": "AMX_GetPubvarEntry(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetTagEntry", "contents": "AMX_GetTagEntry(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetEntry", "contents": "AMX_GetEntry(${1:table}, ${2:idx}, ${3:&buffer}, ${4:pattern})" },
		{ "trigger": "AMX_GetPublicEntryPrefix", "contents": "AMX_GetPublicEntryPrefix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetNativeEntryPrefix", "contents": "AMX_GetNativeEntryPrefix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetLibraryEntryPrefix", "contents": "AMX_GetLibraryEntryPrefix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetPubvarEntryPrefix", "contents": "AMX_GetPubvarEntryPrefix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetTagEntryPrefix", "contents": "AMX_GetTagEntryPrefix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetEntryPrefix", "contents": "AMX_GetEntryPrefix(${1:table}, ${2:idx}, ${3:&buffer}, ${4:pattern})" },
		{ "trigger": "AMX_GetPublicEntrySuffix", "contents": "AMX_GetPublicEntrySuffix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetNativeEntrySuffix", "contents": "AMX_GetNativeEntrySuffix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetLibraryEntrySuffix", "contents": "AMX_GetLibraryEntrySuffix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetPubvarEntrySuffix", "contents": "AMX_GetPubvarEntrySuffix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetTagEntrySuffix", "contents": "AMX_GetTagEntrySuffix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetEntrySuffix", "contents": "AMX_GetEntrySuffix(${1:table}, ${2:idx}, ${3:&buffer}, ${4:pattern})" },
		{ "trigger": "AMX_GetPublicName", "contents": "AMX_GetPublicName(${1:idx}, ${2:buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetNativeName", "contents": "AMX_GetNativeName(${1:idx}, ${2:buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetLibraryName", "contents": "AMX_GetLibraryName(${1:idx}, ${2:buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetPubvarName", "contents": "AMX_GetPubvarName(${1:idx}, ${2:buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetTagName", "contents": "AMX_GetTagName(${1:idx}, ${2:buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetName", "contents": "AMX_GetName(${1:table}, ${2:idx}, ${3:buffer}, ${4:pattern})" },
		{ "trigger": "AMX_GetPublicNamePrefix", "contents": "AMX_GetPublicNamePrefix(${1:idx}, ${2:buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetNativeNamePrefix", "contents": "AMX_GetNativeNamePrefix(${1:idx}, ${2:buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetLibraryNamePrefix", "contents": "AMX_GetLibraryNamePrefix(${1:idx}, ${2:buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetPubvarNamePrefix", "contents": "AMX_GetPubvarNamePrefix(${1:idx}, ${2:buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetTagNamePrefix", "contents": "AMX_GetTagNamePrefix(${1:idx}, ${2:buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetNamePrefix", "contents": "AMX_GetNamePrefix(${1:table}, ${2:idx}, ${3:buffer}, ${4:pattern})" },
		{ "trigger": "AMX_GetPublicNameSuffix", "contents": "AMX_GetPublicNameSuffix(${1:idx}, ${2:buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetNativeNameSuffix", "contents": "AMX_GetNativeNameSuffix(${1:idx}, ${2:buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetLibraryNameSuffix", "contents": "AMX_GetLibraryNameSuffix(${1:idx}, ${2:buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetPubvarNameSuffix", "contents": "AMX_GetPubvarNameSuffix(${1:idx}, ${2:buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetTagNameSuffix", "contents": "AMX_GetTagNameSuffix(${1:idx}, ${2:buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetNameSuffix", "contents": "AMX_GetNameSuffix(${1:table}, ${2:idx}, ${3:buffer}, ${4:pattern})" },
		{ "trigger": "AMX_GetPublicPointer", "contents": "AMX_GetPublicPointer(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetNativePointer", "contents": "AMX_GetNativePointer(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetLibraryPointer", "contents": "AMX_GetLibraryPointer(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetPubvarPointer", "contents": "AMX_GetPubvarPointer(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetTagPointer", "contents": "AMX_GetTagPointer(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetPointer", "contents": "AMX_GetPointer(${1:table}, ${2:idx}, ${3:&buffer}, ${4:pattern})" },
		{ "trigger": "AMX_GetPublicPointerPrefix", "contents": "AMX_GetPublicPointerPrefix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetNativePointerPrefix", "contents": "AMX_GetNativePointerPrefix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetLibraryPointerPrefix", "contents": "AMX_GetLibraryPointerPrefix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetPubvarPointerPrefix", "contents": "AMX_GetPubvarPointerPrefix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetTagPointerPrefix", "contents": "AMX_GetTagPointerPrefix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetPointerPrefix", "contents": "AMX_GetPointerPrefix(${1:table}, ${2:idx}, ${3:&buffer}, ${4:pattern})" },
		{ "trigger": "AMX_GetPublicPointerSuffix", "contents": "AMX_GetPublicPointerSuffix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetNativePointerSuffix", "contents": "AMX_GetNativePointerSuffix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetLibraryPointerSuffix", "contents": "AMX_GetLibraryPointerSuffix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetPubvarPointerSuffix", "contents": "AMX_GetPubvarPointerSuffix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetTagPointerSuffix", "contents": "AMX_GetTagPointerSuffix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetPointerSuffix", "contents": "AMX_GetPointerSuffix(${1:table}, ${2:idx}, ${3:&buffer}, ${4:pattern})" },
		{ "trigger": "AMX_GetPublicValue", "contents": "AMX_GetPublicValue(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetNativeValue", "contents": "AMX_GetNativeValue(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetLibraryValue", "contents": "AMX_GetLibraryValue(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetPubvarValue", "contents": "AMX_GetPubvarValue(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetTagValue", "contents": "AMX_GetTagValue(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetValue", "contents": "AMX_GetValue(${1:table}, ${2:idx}, ${3:&buffer}, ${4:pattern})" },
		{ "trigger": "AMX_GetPublicValuePrefix", "contents": "AMX_GetPublicValuePrefix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetNativeValuePrefix", "contents": "AMX_GetNativeValuePrefix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetLibraryValuePrefix", "contents": "AMX_GetLibraryValuePrefix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetPubvarValuePrefix", "contents": "AMX_GetPubvarValuePrefix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetTagValuePrefix", "contents": "AMX_GetTagValuePrefix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetValuePrefix", "contents": "AMX_GetValuePrefix(${1:table}, ${2:idx}, ${3:&buffer}, ${4:pattern})" },
		{ "trigger": "AMX_GetPublicValueSuffix", "contents": "AMX_GetPublicValueSuffix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetNativeValueSuffix", "contents": "AMX_GetNativeValueSuffix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetLibraryValueSuffix", "contents": "AMX_GetLibraryValueSuffix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetPubvarValueSuffix", "contents": "AMX_GetPubvarValueSuffix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetTagValueSuffix", "contents": "AMX_GetTagValueSuffix(${1:idx}, ${2:&buffer}, ${3:pattern})" },
		{ "trigger": "AMX_GetValueSuffix", "contents": "AMX_GetValueSuffix(${1:table}, ${2:idx}, ${3:&buffer}, ${4:pattern})" },
		{ "trigger": "Area_AddCube", "contents": "Area_AddCube(${1:x0}, ${2:y0}, ${3:z0}, ${4:x1}, ${5:y1}, ${6:z1})" },
		{ "trigger": "Area_AddBox", "contents": "Area_AddBox(${1:minx}, ${2:miny}, ${3:maxx}, ${4:maxy})" },
		{ "trigger": "Area_AddCircle", "contents": "Area_AddCircle(${1:x}, ${2:y}, ${3:r}, ${4:h})" },
		{ "trigger": "Area_AddSphere", "contents": "Area_AddSphere(${1:x}, ${2:y}, ${3:z}, ${4:r})" },
		{ "trigger": "Area_AddPoly", "contents": "Area_AddPoly(${1:x1}, ${2:y1}, ${3:x2}, ${4:y2}, ${5:x3}, ${6:y3}, ${7:args})" },
		{ "trigger": "Area_Delete", "contents": "Area_Delete(${1:area})" },
		{ "trigger": "Area_GetPlayerArea", "contents": "Area_GetPlayerArea(${1:playerid})" },
		{ "trigger": "Area_SetPlayer", "contents": "Area_SetPlayer(${1:area}, ${2:playerid}, ${3:set})" },
		{ "trigger": "Area_GetPlayer", "contents": "Area_GetPlayer(${1:area}, ${2:playerid})" },
		{ "trigger": "Area_SetAllPlayers", "contents": "Area_SetAllPlayers(${1:area}, ${2:set})" },
		{ "trigger": "Area_SetWorld", "contents": "Area_SetWorld(${1:area}, ${2:world}, ${3:set})" },
		{ "trigger": "Area_GetWorld", "contents": "Area_GetWorld(${1:area}, ${2:world})" },
		{ "trigger": "Area_SetAllWorlds", "contents": "Area_SetAllWorlds(${1:area}, ${2:set})" },
		{ "trigger": "Area_IsValid", "contents": "Area_IsValid(${1:area})" },
		{ "trigger": "Area_IsEmpty", "contents": "Area_IsEmpty(${1:area})" },
		{ "trigger": "Bintree_Generate", "contents": "Bintree_Generate(${1:output<>}, ${2:input}, ${3:size})" },
		{ "trigger": "Bintree_Reset", "contents": "Bintree_Reset(${1:tree<>}, ${2:pointer})" },
		{ "trigger": "Bintree_FindValue", "contents": "Bintree_FindValue(${1:tree<>}, ${2:value}, ${3:&cont}, ${4:&old})" },
		{ "trigger": "Bintree_Add", "contents": "Bintree_Add(${1:data<>}, ${2:pointer}, ${3:value}, ${4:offset}, ${5:maxsize})" },
		{ "trigger": "Bintree_Delete", "contents": "Bintree_Delete(${1:source<>}, ${2:index}, ${3:count})" },
		{ "trigger": "Bintree_UpdatePointers", "contents": "Bintree_UpdatePointers(${1:data<>}, ${2:offset}, ${3:size}, ${4:mod})" },
		{ "trigger": "Bit_Set", "contents": "Bit_Set(${1:array<>}, ${2:slot}, ${3:set})" },
		{ "trigger": "Bit_SetAll", "contents": "Bit_SetAll(${1:array<>}, ${2:set}, ${3:size})" },
		{ "trigger": "Bit_Get", "contents": "Bit_Get(${1:array<>}, ${2:slot})" },
		{ "trigger": "Bit_Let", "contents": "Bit_Let(${1:array<>}, ${2:slot})" },
		{ "trigger": "Bit_Vet", "contents": "Bit_Vet(${1:array<>}, ${2:slot})" },
		{ "trigger": "Bit_Slot", "contents": "Bit_Slot(${1:value})" },
		{ "trigger": "Bit_Mask", "contents": "Bit_Mask(${1:value})" },
		{ "trigger": "Bit_GetCount", "contents": "Bit_GetCount(${1:array<>}, ${2:size})" },
		{ "trigger": "Bit_Display", "contents": "Bit_Display(${1:array<>}, ${2:size})" },
		{ "trigger": "Bits", "contents": "Bits(${1:array<>})" },
		{ "trigger": "Blanks", "contents": "Blanks(${1:array<>})" },
		{ "trigger": "bits", "contents": "bits()" },
		{ "trigger": "bitsof", "contents": "bitsof()" },
		{ "trigger": "Cell_ReverseBits", "contents": "Cell_ReverseBits(${1:data})" },
		{ "trigger": "Cell_ReverseNibbles", "contents": "Cell_ReverseNibbles(${1:data})" },
		{ "trigger": "Cell_ReverseBytes", "contents": "Cell_ReverseBytes(${1:data})" },
		{ "trigger": "Cell_CountBits", "contents": "Cell_CountBits(${1:data})" },
		{ "trigger": "Cell_GetLowestBit", "contents": "Cell_GetLowestBit(${1:data})" },
		{ "trigger": "Cell_GetLowestComponent", "contents": "Cell_GetLowestComponent(${1:data})" },
		{ "trigger": "Class_Add", "contents": "Class_Add(${1:skin}, ${2:x}, ${3:y}, ${4:z}, ${5:a}, ${6:args})" },
		{ "trigger": "Class_AddEx", "contents": "Class_AddEx(${1:forgroup}, ${2:setgroup}, ${3:skin}, ${4:x}, ${5:y}, ${6:z}, ${7:a}, ${8:args})" },
		{ "trigger": "Class_AddForGroup", "contents": "Class_AddForGroup(${1:group}, ${2:skin}, ${3:x}, ${4:y}, ${5:z}, ${6:a}, ${7:args})" },
		{ "trigger": "Class_AddWithGroupSet", "contents": "Class_AddWithGroupSet(${1:group}, ${2:skin}, ${3:x}, ${4:y}, ${5:z}, ${6:a}, ${7:args})" },
		{ "trigger": "Class_Enable", "contents": "Class_Enable(${1:classid}, ${2:toggle})" },
		{ "trigger": "Class_Delete", "contents": "Class_Delete(${1:classid})" },
		{ "trigger": "Class_SetPlayer", "contents": "Class_SetPlayer(${1:classid}, ${2:playerid}, ${3:s})" },
		{ "trigger": "Class_GetPlayer", "contents": "Class_GetPlayer(${1:classid}, ${2:playerid})" },
		{ "trigger": "Class_Get", "contents": "Class_Get(${1:playerid})" },
		{ "trigger": "Class_Goto", "contents": "Class_Goto(${1:playerid}, ${2:playerclass})" },
		{ "trigger": "Class_DisableSelection", "contents": "Class_DisableSelection(${1:playerid})" },
		{ "trigger": "Class_DisableReselection", "contents": "Class_DisableReselection(${1:playerid})" },
		{ "trigger": "Class_EnableReselection", "contents": "Class_EnableReselection(${1:playerid})" },
		{ "trigger": "Class_ForceReselection", "contents": "Class_ForceReselection(${1:playerid})" },
		{ "trigger": "Class_ReturnToSelection", "contents": "Class_ReturnToSelection(${1:playerid})" },
		{ "trigger": "SetColoursCanHaveSpaces", "contents": "SetColoursCanHaveSpaces(${1:set})" },
		{ "trigger": "SetColour", "contents": "SetColour(${1:name}, ${2:color})" },
		{ "trigger": "SetColourHash", "contents": "SetColourHash(${1:hash}, ${2:color})" },
		{ "trigger": "GetColour", "contents": "GetColour(${1:name}, ${2:alpha})" },
		{ "trigger": "GetColourStream", "contents": "GetColourStream(${1:str}, ${2:&idx}, ${3:alpha})" },
		{ "trigger": "GetColourHash", "contents": "GetColourHash(${1:hash}, ${2:alpha})" },
		{ "trigger": "Command_AddAlt", "contents": "Command_AddAlt(${1:commandid}, ${2:altname})" },
		{ "trigger": "Command_AddAltNamed", "contents": "Command_AddAltNamed(${1:command}, ${2:altname})" },
		{ "trigger": "Command_SetPlayer", "contents": "Command_SetPlayer(${1:commandid}, ${2:playerid}, ${3:set})" },
		{ "trigger": "Command_SetPlayerNamed", "contents": "Command_SetPlayerNamed(${1:command}, ${2:playerid}, ${3:set})" },
		{ "trigger": "Command_SetDeniedReturn", "contents": "Command_SetDeniedReturn(${1:set})" },
		{ "trigger": "Command_GetDeniedReturn", "contents": "Command_GetDeniedReturn()" },
		{ "trigger": "Command_SetIllegalReturn", "contents": "Command_SetIllegalReturn(${1:set})" },
		{ "trigger": "Command_GetIllegalReturn", "contents": "Command_GetIllegalReturn()" },
		{ "trigger": "Command_SetUnknownReturn", "contents": "Command_SetUnknownReturn(${1:set})" },
		{ "trigger": "Command_GetUnknownReturn", "contents": "Command_GetUnknownReturn()" },
		{ "trigger": "Command_SetDisconnectReturn", "contents": "Command_SetDisconnectReturn(${1:set})" },
		{ "trigger": "Command_GetDisconnectReturn", "contents": "Command_GetDisconnectReturn()" },
		{ "trigger": "Command_GetID", "contents": "Command_GetID(${1:command})" },
		{ "trigger": "Command_GetPlayer", "contents": "Command_GetPlayer(${1:commandid}, ${2:playerid})" },
		{ "trigger": "Command_GetPlayerNamed", "contents": "Command_GetPlayerNamed(${1:command}, ${2:playerid})" },
		{ "trigger": "Command_Remove", "contents": "Command_Remove(${1:commandid})" },
		{ "trigger": "Command_RemoveNamed", "contents": "Command_RemoveNamed(${1:command})" },
		{ "trigger": "Command_ReProcess", "contents": "Command_ReProcess(${1:playerid}, ${2:cmdtext}, ${3:help})" },
		{ "trigger": "Command_GetName", "contents": "Command_GetName(${1:commandid})" },
		{ "trigger": "Command_GetDisplay", "contents": "Command_GetDisplay(${1:commandid}, ${2:playerid})" },
		{ "trigger": "Command_GetDisplayNamed", "contents": "Command_GetDisplayNamed(${1:command}, ${2:playerid})" },
		{ "trigger": "Command_GetPlayerCommandCount", "contents": "Command_GetPlayerCommandCount(${1:playerid})" },
		{ "trigger": "Command_GetNext", "contents": "Command_GetNext(${1:index}, ${2:playerid})" },
		{ "trigger": "Command_SetProvider", "contents": "Command_SetProvider(${1:p})" },
		{ "trigger": "Command_GetProvider", "contents": "Command_GetProvider()" },
		{ "trigger": "Command_SetPlayerProvider", "contents": "Command_SetPlayerProvider(${1:playerid}, ${2:p})" },
		{ "trigger": "Command_GetPlayerProvider", "contents": "Command_GetPlayerProvider(${1:playerid})" },
		{ "trigger": "P_level", "contents": "P_level(${1:str}, ${2:args})" },
		{ "trigger": "P_I", "contents": "P_I(${1:str}, ${2:args})" },
		{ "trigger": "P_W", "contents": "P_W(${1:str}, ${2:args})" },
		{ "trigger": "P_E", "contents": "P_E(${1:str}, ${2:args})" },
		{ "trigger": "P_F", "contents": "P_F(${1:str}, ${2:args})" },
		{ "trigger": "P_C", "contents": "P_C(${1:str}, ${2:args})" },
		{ "trigger": "Dialog_Show", "contents": "Dialog_Show(${1:playerid}, ${2:style}, ${3:title}, ${4:caption}, ${5:button1}, ${6:button2}, ${7:dialogid})" },
		{ "trigger": "Dialog_ShowCallback", "contents": "Dialog_ShowCallback(${1:playerid}, ${2:callback}, ${3:style}, ${4:title}, ${5:caption}, ${6:button1}, ${7:button2}, ${8:dialogid})" },
		{ "trigger": "Dialog_ObtainID", "contents": "Dialog_ObtainID()" },
		{ "trigger": "Dialog_TryObtainID", "contents": "Dialog_TryObtainID(${1:id})" },
		{ "trigger": "Dialog_Get", "contents": "Dialog_Get(${1:playerid})" },
		{ "trigger": "Dialog_Garbage", "contents": "Dialog_Garbage(${1:dialogid})" },
		{ "trigger": "Dialog_Free", "contents": "Dialog_Free(${1:dialogid})" },
		{ "trigger": "Dialog_Set", "contents": "Dialog_Set(${1:playerid}, ${2:dialogid})" },
		{ "trigger": "Dialog_ShowCallbackData", "contents": "Dialog_ShowCallbackData(${1:playerid}, ${2:callback}, ${3:style}, ${4:title}, ${5:caption}, ${6:button1}, ${7:button2}, ${8:dialogid})" },
		{ "trigger": "Dialog_Hide", "contents": "Dialog_Hide(${1:playerid})" },
		{ "trigger": "Dialog_SetCallback", "contents": "Dialog_SetCallback(${1:dialogid}, ${2:callback})" },
		{ "trigger": "Dialog_SetCallbackData", "contents": "Dialog_SetCallbackData(${1:dialogid}, ${2:callback})" },
		{ "trigger": "SetMaxConnections", "contents": "SetMaxConnections(${1:max}, ${2:action})" },
		{ "trigger": "Group_Create", "contents": "Group_Create(${1:name})" },
		{ "trigger": "Group_Destroy", "contents": "Group_Destroy(${1:group})" },
		{ "trigger": "Group_SetPlayer", "contents": "Group_SetPlayer(${1:group}, ${2:playerid}, ${3:s})" },
		{ "trigger": "Group_GetPlayer", "contents": "Group_GetPlayer(${1:group}, ${2:playerid})" },
		{ "trigger": "Group_SetGroup", "contents": "Group_SetGroup(${1:parent}, ${2:child}, ${3:s})" },
		{ "trigger": "Group_SetGlobalGroup", "contents": "Group_SetGlobalGroup(${1:child}, ${2:s})" },
		{ "trigger": "Group_SetCommand", "contents": "Group_SetCommand(${1:group}, ${2:commandid}, ${3:s})" },
		{ "trigger": "Group_SetCommandDefault", "contents": "Group_SetCommandDefault(${1:group}, ${2:s})" },
		{ "trigger": "Group_SetGlobalCommand", "contents": "Group_SetGlobalCommand(${1:commandid}, ${2:s})" },
		{ "trigger": "Group_SetGlobalCommandDefault", "contents": "Group_SetGlobalCommandDefault(${1:s})" },
		{ "trigger": "Group_SetArea", "contents": "Group_SetArea(${1:group}, ${2:area}, ${3:s})" },
		{ "trigger": "Group_SetAreaDefault", "contents": "Group_SetAreaDefault(${1:group}, ${2:s})" },
		{ "trigger": "Group_SetGlobalArea", "contents": "Group_SetGlobalArea(${1:area}, ${2:s})" },
		{ "trigger": "Group_SetGlobalAreaDefault", "contents": "Group_SetGlobalAreaDefault(${1:s})" },
		{ "trigger": "Group_SetClass", "contents": "Group_SetClass(${1:group}, ${2:class}, ${3:s})" },
		{ "trigger": "Group_SetClassDefault", "contents": "Group_SetClassDefault(${1:group}, ${2:s})" },
		{ "trigger": "Group_SetGlobalClass", "contents": "Group_SetGlobalClass(${1:class}, ${2:s})" },
		{ "trigger": "Group_SetGlobalCalssDefault", "contents": "Group_SetGlobalCalssDefault(${1:s})" },
		{ "trigger": "PlayerGroups", "contents": "PlayerGroups(${1:playerid})" },
		{ "trigger": "Group", "contents": "Group(${1:group})" },
		{ "trigger": "Group_SetBalanced", "contents": "Group_SetBalanced(${1:playerid}, ${2:args})" },
		{ "trigger": "Group_GetColour", "contents": "Group_GetColour(${1:group})" },
		{ "trigger": "Group_GetColor", "contents": "Group_GetColor(${1:group})" },
		{ "trigger": "Group_SetColour", "contents": "Group_SetColour(${1:group}, ${2:colour})" },
		{ "trigger": "Group_SetColor", "contents": "Group_SetColor(${1:group}, ${2:color})" },
		{ "trigger": "Group_GetGang", "contents": "Group_GetGang(${1:group})" },
		{ "trigger": "Group_SetGang", "contents": "Group_SetGang(${1:group}, ${2:set})" },
		{ "trigger": "Group_GetID", "contents": "Group_GetID(${1:name})" },
		{ "trigger": "Group_GetName", "contents": "Group_GetName(${1:group})" },
		{ "trigger": "Group_SetName", "contents": "Group_SetName(${1:group}, ${2:name})" },
		{ "trigger": "INI_ParseFile", "contents": "INI_ParseFile(${1:fname}, ${2:remoteFormat}, ${3:bFileFirst}, ${4:bExtra}, ${5:extra}, ${6:bLocal}, ${7:bPassTag}, ${8:bFilter}, ${9:filter})" },
		{ "trigger": "INI_Load", "contents": "INI_Load(${1:filename}, ${2:bExtra}, ${3:extra}, ${4:bLocal})" },
		{ "trigger": "INI_Int", "contents": "INI_Int(${1:name}, ${2:&dest})" },
		{ "trigger": "INI_Float", "contents": "INI_Float(${1:name}, ${2:&dest})" },
		{ "trigger": "INI_Hex", "contents": "INI_Hex(${1:name}, ${2:&dest})" },
		{ "trigger": "INI_Bin", "contents": "INI_Bin(${1:name}, ${2:&dest})" },
		{ "trigger": "INI_String", "contents": "INI_String(${1:name}, ${2:dest}, ${3:size})" },
		{ "trigger": "INI_Open", "contents": "INI_Open(${1:filename})" },
		{ "trigger": "INI_Close", "contents": "INI_Close(${1:file})" },
		{ "trigger": "INI_SetTag", "contents": "INI_SetTag(${1:file}, ${2:tag})" },
		{ "trigger": "INI_DeleteTag", "contents": "INI_DeleteTag(${1:file}, ${2:tag})" },
		{ "trigger": "INI_WriteArray", "contents": "INI_WriteArray(${1:file}, ${2:name}, ${3:data}, ${4:len})" },
		{ "trigger": "INI_RemoveEntry", "contents": "INI_RemoveEntry(${1:file}, ${2:name})" },
		{ "trigger": "INI_WriteString", "contents": "INI_WriteString(${1:file}, ${2:name}, ${3:data})" },
		{ "trigger": "INI_WriteInt", "contents": "INI_WriteInt(${1:file}, ${2:name}, ${3:data})" },
		{ "trigger": "INI_WriteHex", "contents": "INI_WriteHex(${1:file}, ${2:name}, ${3:data})" },
		{ "trigger": "INI_WriteBin", "contents": "INI_WriteBin(${1:file}, ${2:name}, ${3:data})" },
		{ "trigger": "INI_WriteBool", "contents": "INI_WriteBool(${1:file}, ${2:name}, ${3:data})" },
		{ "trigger": "INI_WriteFloat", "contents": "INI_WriteFloat(${1:file}, ${2:name}, ${3:data}, ${4:accuracy})" },
		{ "trigger": "Callback_Get", "contents": "Callback_Get(${1:name}, ${2:result}, ${3:expect})" },
		{ "trigger": "Callback_Release", "contents": "Callback_Release(${1:input})" },
		{ "trigger": "Callback_Call", "contents": "Callback_Call(${1:input}, ${2:args})" },
		{ "trigger": "Iter_Init", "contents": "Iter_Init(${1:arr<>})" },
		{ "trigger": "Iter_Add", "contents": "Iter_Add(${1:iter<>}, ${2:element})" },
		{ "trigger": "Iter_Remove", "contents": "Iter_Remove(${1:iter<>}, ${2:element})" },
		{ "trigger": "Iter_Contains", "contents": "Iter_Contains(${1:iter<>}, ${2:element})" },
		{ "trigger": "Iter_SafeRemove", "contents": "Iter_SafeRemove(${1:iter<>}, ${2:element}, ${3:&ret})" },
		{ "trigger": "Iter_Random", "contents": "Iter_Random(${1:iter<>})" },
		{ "trigger": "Iter_Count", "contents": "Iter_Count(${1:iter<>})" },
		{ "trigger": "Iter_Clear", "contents": "Iter_Clear(${1:iter<>})" },
		{ "trigger": "Iter_Free", "contents": "Iter_Free(${1:iter<>})" },
		{ "trigger": "foreach", "contents": "foreach()" },
		{ "trigger": "Iter_Begin", "contents": "Iter_Begin(${1:iter<>})" },
		{ "trigger": "Iter_End", "contents": "Iter_End(${1:iter<>})" },
		{ "trigger": "Iter_First", "contents": "Iter_First(${1:iter<>})" },
		{ "trigger": "Iter_Last", "contents": "Iter_Last(${1:iter<>})" },
		{ "trigger": "Iter_Next", "contents": "Iter_Next(${1:iter<>}, ${2:cur})" },
		{ "trigger": "Iter_Prev", "contents": "Iter_Prev(${1:iter<>}, ${2:cur})" },
		{ "trigger": "Langs_Add", "contents": "Langs_Add(${1:code}, ${2:name})" },
		{ "trigger": "Langs_SetPlayerLanguage", "contents": "Langs_SetPlayerLanguage(${1:playerid}, ${2:l})" },
		{ "trigger": "Langs_GetPlayerLanguage", "contents": "Langs_GetPlayerLanguage(${1:playerid})" },
		{ "trigger": "Langs_AddLanguage", "contents": "Langs_AddLanguage(${1:code}, ${2:name})" },
		{ "trigger": "Langs_RemoveLanguage", "contents": "Langs_RemoveLanguage(${1:l})" },
		{ "trigger": "Langs_GetLanguage", "contents": "Langs_GetLanguage(${1:identifier})" },
		{ "trigger": "Langs_GetLanguageCount", "contents": "Langs_GetLanguageCount()" },
		{ "trigger": "Langs_GetLanguageCodes", "contents": "Langs_GetLanguageCodes()" },
		{ "trigger": "Langs_GetName", "contents": "Langs_GetName(${1:l})" },
		{ "trigger": "Langs_GetCode", "contents": "Langs_GetCode(${1:l})" },
		{ "trigger": "Langs_IsValid", "contents": "Langs_IsValid(${1:l})" },
		{ "trigger": "Langs_SetPlayerCode", "contents": "Langs_SetPlayerCode(${1:playerid}, ${2:code})" },
		{ "trigger": "malloc", "contents": "malloc(${1:size})" },
		{ "trigger": "calloc", "contents": "calloc(${1:size})" },
		{ "trigger": "free", "contents": "free(${1:slot})" },
		{ "trigger": "mget", "contents": "mget(${1:array}, ${2:index})" },
		{ "trigger": "mset", "contents": "mset(${1:array}, ${2:index}, ${3:value})" },
		{ "trigger": "mgets", "contents": "mgets(${1:target}, ${2:length}, ${3:array}, ${4:index})" },
		{ "trigger": "msets", "contents": "msets(${1:array}, ${2:index}, ${3:str})" },
		{ "trigger": "Malloc_SlotSize", "contents": "Malloc_SlotSize(${1:array})" },
		{ "trigger": "Malloc_Get", "contents": "Malloc_Get(${1:array}, ${2:index})" },
		{ "trigger": "Malloc_Set", "contents": "Malloc_Set(${1:array}, ${2:index}, ${3:value})" },
		{ "trigger": "Malloc_GetS", "contents": "Malloc_GetS(${1:target}, ${2:length}, ${3:array}, ${4:index})" },
		{ "trigger": "Malloc_SetS", "contents": "Malloc_SetS(${1:array}, ${2:index}, ${3:str})" },
		{ "trigger": "Malloc_GetA", "contents": "Malloc_GetA(${1:target}, ${2:length}, ${3:array}, ${4:index})" },
		{ "trigger": "Malloc_SetA", "contents": "Malloc_SetA(${1:array}, ${2:index}, ${3:arr}, ${4:len})" },
		{ "trigger": "Master_Caller", "contents": "Master_Caller()" },
		{ "trigger": "foreign", "contents": "foreign()" },
		{ "trigger": "global", "contents": "global()" },
		{ "trigger": "PHP_SendString", "contents": "PHP_SendString(${1:name}, ${2:value}, ${3:priority})" },
		{ "trigger": "PHP_SendFloat", "contents": "PHP_SendFloat(${1:name}, ${2:value}, ${3:priority})" },
		{ "trigger": "PHP_SendBool", "contents": "PHP_SendBool(${1:name}, ${2:value}, ${3:priority})" },
		{ "trigger": "PHP_SendInt", "contents": "PHP_SendInt(${1:name}, ${2:value}, ${3:priority})" },
		{ "trigger": "phpdata", "contents": "phpdata()" },
		{ "trigger": "phpfunc", "contents": "phpfunc()" },
		{ "trigger": "PA_Init", "contents": "PA_Init(${1:pa<>}, ${2:init}, ${3:s})" },
		{ "trigger": "PA_FastInit", "contents": "PA_FastInit(${1:pa<>})" },
		{ "trigger": "PA_Set", "contents": "PA_Set(${1:pa<>}, ${2:slot}, ${3:set})" },
		{ "trigger": "PA_Let", "contents": "PA_Let(${1:pa<>}, ${2:slot})" },
		{ "trigger": "PA_Vet", "contents": "PA_Vet(${1:pa<>}, ${2:slot})" },
		{ "trigger": "PA_Get", "contents": "PA_Get(${1:pa<>}, ${2:slot})" },
		{ "trigger": "PA_GetCount", "contents": "PA_GetCount(${1:pa<>})" },
		{ "trigger": "PA", "contents": "PA(${1:pa<>})" },
		{ "trigger": "PS", "contents": "PS(${1:iter})" },
		{ "trigger": "remotefunc", "contents": "remotefunc()" },
		{ "trigger": "broadcastfunc", "contents": "broadcastfunc()" },
		{ "trigger": "localfunc", "contents": "localfunc()" },
		{ "trigger": "targetfunc", "contents": "targetfunc()" },
		{ "trigger": "YHash", "contents": "YHash(${1:str}, ${2:sensitive}, ${3:type}, ${4:len}, ${5:pack})" },
		{ "trigger": "svar", "contents": "svar()" },
		{ "trigger": "TD_Create", "contents": "TD_Create(${1:x}, ${2:y}, ${3:letterX}, ${4:letterY}, ${5:textX}, ${6:textY}, ${7:colour}, ${8:boxColour}, ${9:bgColour}, ${10:shadow}, ${11:outline}, ${12:align}, ${13:font}, ${14:proportional}, ${15:box}, ${16:time}, ${17:name[]})"},		
		{ "trigger": "TD_Delete", "contents": "TD_Delete(${1:styleId})" },
		{ "trigger": "TD_Display", "contents": "TD_Display(${1:text}, ${2:id}, ${3:x}, ${4:y})" },
		{ "trigger": "TD_Destroy", "contents": "TD_Destroy(${1:textDraw})" },
		{ "trigger": "TD_TextPosition", "contents": "TD_TextPosition(${1:textID}, ${2:x}, ${3:y})" },
		{ "trigger": "TD_TextXPos", "contents": "TD_TextXPos(${1:textID}, ${2:x})" },
		{ "trigger": "TD_TextYPos", "contents": "TD_TextYPos(${1:textID}, ${2:y})" },
		{ "trigger": "TD_SetString", "contents": "TD_SetString(${1:td}, ${2:text})" },
		{ "trigger": "TD_ShowForPlayer", "contents": "TD_ShowForPlayer(${1:playerid}, ${2:textDraw})" },
		{ "trigger": "TD_HideForPlayer", "contents": "TD_HideForPlayer(${1:playerid}, ${2:textDraw})" },
		{ "trigger": "TD_ShowForAll", "contents": "TD_ShowForAll(${1:textDraw})" },
		{ "trigger": "TD_HideForAll", "contents": "TD_HideForAll(${1:textDraw})" },
		{ "trigger": "TD_DisplayForPlayer", "contents": "TD_DisplayForPlayer(${1:playerid}, ${2:text}, ${3:id}, ${4:x}, ${5:y})" },
		{ "trigger": "TD_DisplayForAll", "contents": "TD_DisplayForAll(${1:text}, ${2:id}, ${3:x}, ${4:y})" },
		{ "trigger": "TD_StylePosition", "contents": "TD_StylePosition(${1:styleID}, ${2:x}, ${3:y})" },
		{ "trigger": "TD_StyleXPos", "contents": "TD_StyleXPos(${1:styleID}, ${2:x})" },
		{ "trigger": "TD_StyleYPos", "contents": "TD_StyleYPos(${1:styleID}, ${2:y})" },
		{ "trigger": "TD_LetterSize", "contents": "TD_LetterSize(${1:styleID}, ${2:x}, ${3:y})" },
		{ "trigger": "TD_LetterX", "contents": "TD_LetterX(${1:styleID}, ${2:x})" },
		{ "trigger": "TD_LetterY", "contents": "TD_LetterY(${1:styleID}, ${2:y})" },
		{ "trigger": "TD_TextSize", "contents": "TD_TextSize(${1:styleID}, ${2:x}, ${3:y})" },
		{ "trigger": "TD_TextX", "contents": "TD_TextX(${1:styleID}, ${2:x})" },
		{ "trigger": "TD_TextY", "contents": "TD_TextY(${1:styleID}, ${2:y})" },
		{ "trigger": "TD_Alignment", "contents": "TD_Alignment(${1:styleID}, ${2:alignment})" },
		{ "trigger": "TD_Colour", "contents": "TD_Colour(${1:styleID}, ${2:colour})" },
		{ "trigger": "TD_Color", "contents": "TD_Color(${1:styleID}, ${2:color})" },
		{ "trigger": "TD_UseBox", "contents": "TD_UseBox(${1:styleID}, ${2:use})" },
		{ "trigger": "TD_BoxColour", "contents": "TD_BoxColour(${1:styleID}, ${2:colour})" },
		{ "trigger": "TD_BoxColor", "contents": "TD_BoxColor(${1:styleID}, ${2:color})" },
		{ "trigger": "TD_SetShadow", "contents": "TD_SetShadow(${1:styleID}, ${2:size})" },
		{ "trigger": "TD_SetOutline", "contents": "TD_SetOutline(${1:styleID}, ${2:size})" },
		{ "trigger": "TD_BackgroundColour", "contents": "TD_BackgroundColour(${1:styleID}, ${2:colour})" },
		{ "trigger": "TD_BackgroundColor", "contents": "TD_BackgroundColor(${1:styleID}, ${2:color})" },
		{ "trigger": "TD_Font", "contents": "TD_Font(${1:styleID}, ${2:font})" },
		{ "trigger": "TD_SetProportional", "contents": "TD_SetProportional(${1:styleID}, ${2:set})" },
		{ "trigger": "TD_SetTime", "contents": "TD_SetTime(${1:styleID}, ${2:time}, ${3:existing})" },
		{ "trigger": "TD_Morph", "contents": "TD_Morph(${1:textDraw}, ${2:style}, ${3:time}, ${4:delay})" },
		{ "trigger": "TD_Link", "contents": "TD_Link(${1:base}, ${2:other})" },
		{ "trigger": "TD_Unlink", "contents": "TD_Unlink(${1:td})" },
		{ "trigger": "TD_GetDisplayStyle", "contents": "TD_GetDisplayStyle(${1:td})" },
		{ "trigger": "TD_DisplayHashed", "contents": "TD_DisplayHashed(${1:text}, ${2:hash}, ${3:x}, ${4:y})" },
		{ "trigger": "TD_DisplayHashedForPlayer", "contents": "TD_DisplayHashedForPlayer(${1:playerid}, ${2:text}, ${3:hash}, ${4:x}, ${5:y})" },
		{ "trigger": "TD_DisplayHashedForAll", "contents": "TD_DisplayHashedForAll(${1:text}, ${2:hash}, ${3:x}, ${4:y})" },
		{ "trigger": "TD_DisplayNamed", "contents": "TD_DisplayNamed(${1:text}, ${2:style}, ${3:x}, ${4:y})" },
		{ "trigger": "TD_DisplayNamedForPlayer", "contents": "TD_DisplayNamedForPlayer(${1:playerid}, ${2:text}, ${3:style}, ${4:x}, ${5:y})" },
		{ "trigger": "TD_DisplayNamedForAll", "contents": "TD_DisplayNamedForAll(${1:text}, ${2:style}, ${3:x}, ${4:y})" },
		{ "trigger": "TD_Garbage", "contents": "TD_Garbage(${1:textDraw})" },
		{ "trigger": "TD_Parse", "contents": "TD_Parse(${1:filename})" },
		{ "trigger": "TD_GetNamed", "contents": "TD_GetNamed(${1:name})" },
		{ "trigger": "TD_GetID", "contents": "TD_GetID(${1:hash})" },
		{ "trigger": "TD_Clone", "contents": "TD_Clone(${1:styleID}, ${2:name})" },
		{ "trigger": "TD_GetStyleData", "contents": "TD_GetStyleData(${1:styleID}, ${2:ret[E_TD_DATA]})" },
		{ "trigger": "TD_Name", "contents": "TD_Name(${1:styleID}, ${2:name})" },
		{ "trigger": "Testing_RunAll", "contents": "Testing_RunAll()" },
		{ "trigger": "Text_Send", "contents": "Text_Send(${1:players}, ${2:message}, ${3:args})" },
		{ "trigger": "Text_MessageBox", "contents": "Text_MessageBox(${1:players}, ${2:callback}, ${3:title}, ${4:text}, ${5:button1}, ${6:button2}, ${7:args})" },
		{ "trigger": "Text_InputBox", "contents": "Text_InputBox(${1:players}, ${2:callback}, ${3:title}, ${4:text}, ${5:button1}, ${6:button2}, ${7:args})" },
		{ "trigger": "Text_ListBox", "contents": "Text_ListBox(${1:players}, ${2:callback}, ${3:title}, ${4:text}, ${5:button1}, ${6:button2}, ${7:args})" },
		{ "trigger": "Text_PasswordBox", "contents": "Text_PasswordBox(${1:players}, ${2:callback}, ${3:title}, ${4:text}, ${5:button1}, ${6:button2}, ${7:args})" },
		{ "trigger": "Text_DialogBox", "contents": "Text_DialogBox(${1:players}, ${2:style}, ${3:callback}, ${4:title}, ${5:text}, ${6:button1}, ${7:button2}, ${8:args})" },
		{ "trigger": "Player_GetPreloadLanguage", "contents": "Player_GetPreloadLanguage(${1:playerid})" },
		{ "trigger": "Player_IsRegistered", "contents": "Player_IsRegistered(${1:playerid})" },
		{ "trigger": "Player_IsLoggedIn", "contents": "Player_IsLoggedIn(${1:playerid})" },
		{ "trigger": "Player_GetYID", "contents": "Player_GetYID(${1:playerid})" },
		{ "trigger": "Player_RemoveEntry", "contents": "Player_RemoveEntry(${1:name})" },
		{ "trigger": "Player_WriteString", "contents": "Player_WriteString(${1:name}, ${2:data})" },
		{ "trigger": "Player_WriteArray", "contents": "Player_WriteArray(${1:name}, ${2:data}, ${3:len})" },
		{ "trigger": "Player_WriteInt", "contents": "Player_WriteInt(${1:name}, ${2:data})" },
		{ "trigger": "Player_WriteHex", "contents": "Player_WriteHex(${1:name}, ${2:data})" },
		{ "trigger": "Player_WriteBin", "contents": "Player_WriteBin(${1:name}, ${2:data})" },
		{ "trigger": "Player_WriteBool", "contents": "Player_WriteBool(${1:name}, ${2:data})" },
		{ "trigger": "Player_WriteFloat", "contents": "Player_WriteFloat(${1:name}, ${2:data}, ${3:accuracy})" },
		{ "trigger": "Player_SetTag", "contents": "Player_SetTag(${1:tag})" },
		{ "trigger": "Player_DeleteTag", "contents": "Player_DeleteTag(${1:tag})" },
		{ "trigger": "Player_TryLogin", "contents": "Player_TryLogin(${1:playerid}, ${2:password})" },
		{ "trigger": "Player_ForceLogin", "contents": "Player_ForceLogin(${1:playerid})" },
		{ "trigger": "Player_TryRegister", "contents": "Player_TryRegister(${1:playerid}, ${2:password})" },
		{ "trigger": "Player_ChangePassword", "contents": "Player_ChangePassword(${1:playerid}, ${2:password})" },
		{ "trigger": "Player_TryGroup", "contents": "Player_TryGroup(${1:playerid}, ${2:other}, ${3:password})" },
		{ "trigger": "Player_ForceGroup", "contents": "Player_ForceGroup(${1:playerid}, ${2:other})" },
		{ "trigger": "Player_Reload", "contents": "Player_Reload(${1:playerid})" },
		{ "trigger": "Player_SetPreload", "contents": "Player_SetPreload(${1:playerid}, ${2:data[E_USER_PRELOAD]})" },
		{ "trigger": "Player_Preload", "contents": "Player_Preload(${1:name}, ${2:ret[E_USER_PRELOAD]})" },
		{ "trigger": "ceildiv", "contents": "ceildiv(${1:num}, ${2:denom})" },
		{ "trigger": "floordiv", "contents": "floordiv(${1:num}, ${2:denom})" },
		{ "trigger": "isnull", "contents": "isnull(${1:str})" },
		{ "trigger": "isodd", "contents": "isodd(${1:num})" },
		{ "trigger": "iseven", "contents": "iseven(${1:num})" },
		{ "trigger": "strcpy", "contents": "strcpy(${1:dest}, ${2:src}, ${3:maxlength})" },
		{ "trigger": "StripNL", "contents": "StripNL(${1:str})" },
		{ "trigger": "endofline", "contents": "endofline(${1:line}, ${2:pos})" },
		{ "trigger": "chrfind", "contents": "chrfind(${1:needle}, ${2:haystack}, ${3:start})" },
		{ "trigger": "chrfindp", "contents": "chrfindp(${1:needle}, ${2:haystack}, ${3:start})" },
		{ "trigger": "bernstein", "contents": "bernstein(${1:string})" },
		{ "trigger": "ishex", "contents": "ishex(${1:str})" },
		{ "trigger": "unpack", "contents": "unpack(${1:str})" },
		{ "trigger": "GetIP", "contents": "GetIP(${1:playerid})" },
		{ "trigger": "getstring", "contents": "getstring(${1:addr})" },
		{ "trigger": "getstringarg", "contents": "getstringarg(${1:addr})" },
		{ "trigger": "isnumeric", "contents": "isnumeric(${1:str})" },
		{ "trigger": "hexstr", "contents": "hexstr(${1:string})" },
		{ "trigger": "boolstr", "contents": "boolstr(${1:string})" },
		{ "trigger": "binstr", "contents": "binstr(${1:string})" },
		{ "trigger": "memset", "contents": "memset(${1:dest}, ${2:size}, ${3:val}, ${4:blocksize})" },
		{ "trigger": "ReturnPlayerName", "contents": "ReturnPlayerName(${1:playerid})" },
		{ "trigger": "ftouch", "contents": "ftouch(${1:filename})" },
		{ "trigger": "uvar", "contents": "uvar()" },
		{ "trigger": "va_printf", "contents": "va_printf(${1:fmat}, ${2:va_start})" },
		{ "trigger": "va_format", "contents": "va_format(${1:out}, ${2:size}, ${3:fmat}, ${4:va_start})" },
		{ "trigger": "va_strlen", "contents": "va_strlen(${1:arg})" },
		{ "trigger": "va_getstring", "contents": "va_getstring(${1:dest}, ${2:arg}, ${3:len})" },
		{ "trigger": "WriteMem", "contents": "WriteMem(${1:addr}, ${2:value})" },
		{ "trigger": "XML_New", "contents": "XML_New()" },
		{ "trigger": "XML_Destroy", "contents": "XML_Destroy(${1:rule})" },
		{ "trigger": "XML_AddHandler", "contents": "XML_AddHandler(${1:rule}, ${2:trigger}, ${3:function})" },
		{ "trigger": "XML_RemoveHandler", "contents": "XML_RemoveHandler(${1:rule}, ${2:trigger})" },
		{ "trigger": "XML_Parse", "contents": "XML_Parse(${1:rule}, ${2:filename})" },
		{ "trigger": "XML_GetKeyValue", "contents": "XML_GetKeyValue(${1:key}, ${2:value})" },
		{ "trigger": "XML_AddParameter", "contents": "XML_AddParameter(${1:parent}, ${2:tag}, ${3:value})" },
		{ "trigger": "XML_AddItem", "contents": "XML_AddItem(${1:tag}, ${2:name}, ${3:parent})" },
		{ "trigger": "XML_CreateEntry", "contents": "XML_CreateEntry(${1:tag}, ${2:name}, ${3:parent})" },
		{ "trigger": "XML_AddSubEntry", "contents": "XML_AddSubEntry(${1:tag}, ${2:name}, ${3:parent})" },
		{ "trigger": "XML_WriteItem", "contents": "XML_WriteItem(${1:filename}, ${2:item}, ${3:bIncludeXML}, ${4:bFavourShort})" },
		{ "trigger": "XML_WriteEntry", "contents": "XML_WriteEntry(${1:filename}, ${2:item}, ${3:bIncludeXML}, ${4:bFavourShort})" },
		{ "trigger": "GangZonePulse", "contents": "GangZonePulse(${1:players}, ${2:zone}, ${3:from}, ${4:to}, ${5:time}, ${6:delay}, ${7:time2}, ${8:delay2})" },
		{ "trigger": "GangZonePulseForPlayer", "contents": "GangZonePulseForPlayer(${1:playerid}, ${2:zone}, ${3:from}, ${4:to}, ${5:time}, ${6:delay}, ${7:time2}, ${8:delay2})" },
		{ "trigger": "GangZonePulseForAll", "contents": "GangZonePulseForAll(${1:zone}, ${2:from}, ${3:to}, ${4:time}, ${5:delay}, ${6:time2}, ${7:delay2})" },
		{ "trigger": "GangZoneStopPulse", "contents": "GangZoneStopPulse(${1:players}, ${2:zone})" },
		{ "trigger": "GangZoneStopPulseForPlayer", "contents": "GangZoneStopPulseForPlayer(${1:playerid}, ${2:zone})" },
		{ "trigger": "GangZoneStopPulseForAll", "contents": "GangZoneStopPulseForAll(${1:zone})" },
		"hook",
		"using",
		"inline",
		"stop",
		"defer",
		"repeat",
		"timer",
		"task",
		"ptask",
		"pause",
		"resume",
		"pawn"
	]
}
